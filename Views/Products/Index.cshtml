@using System.Globalization
@model List<SalesOrders.Models.Product>

@{
    ViewData["Title"] = "Product List";
    var southAfricaCulture = new CultureInfo("en-ZA"); // Set the culture for South Africa
}

<h2 class="text-center mb-5">List of Products</h2>

<div class="container-fluid">
    <div class="d-flex justify-content-between mb-3">
        <h3>Products</h3>
        <a asp-controller="Products" asp-action="Create" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Create New Product
        </a>
    </div>

    <!-- Scrollable Table Wrapper with Forced Scroll -->
    <div class="table-responsive mb-5" style="overflow-x: auto; white-space: nowrap; position: relative;">
        <table class="table table-striped table-bordered table-hover align-middle" style="table-layout: fixed;">
            <thead class="table-dark">
                <tr>
                    <th scope="col" style="min-width: 50px;">ID</th>
                    <th scope="col" style="min-width: 100px;">Product Code</th>
                    <th scope="col" style="min-width: 150px;">Name</th>
                    <th scope="col" style="min-width: 200px;">Description</th>
                    <th scope="col" style="min-width: 120px;">Product Type</th>
                    <th scope="col" style="min-width: 120px;">Cost Price</th>
                    <th scope="col" style="min-width: 120px;">Sales Price</th>
                    <th scope="col" style="min-width: 160px;">Staff Discounted Price</th>
                    <th scope="col" style="min-width: 120px;">Stock Quantity</th>
                    <th scope="col" style="min-width: 150px;">Created At</th>
                    <th scope="col" style="min-width: 150px;">Updated At</th>
                    <th scope="col" class="sticky-actions" style="min-width: 120px;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in Model)
                {
                    <tr>
                        <td>@product.Id</td>
                        <td>@product.ProductCode</td>
                        <td class="text-wrap">@product.Name</td>
                        <td class="text-wrap">@product.Description</td>
                        <td>@product.ProductType</td>
                        <td>@product.CostPrice.ToString("C", southAfricaCulture)</td> <!-- Cost Price in Rand -->
                        <td>@product.SalesPrice.ToString("C", southAfricaCulture)</td> <!-- Sales Price in Rand -->
                        <td>@product.StaffDiscountedPrice.ToString("C", southAfricaCulture)</td> <!-- Staff Discounted Price in Rand -->
                        <td>@product.StockQuantity</td>
                        <td>@product.CreatedAt.ToString("g")</td>
                        <td>@product.UpdatedAt.ToString("g")</td>
                        <td class="sticky-actions">
                            <div class="d-grid gap-2">
                                <!-- Edit Button -->
                                <a asp-controller="Products" asp-action="Edit" asp-route-id="@product.Id" class="btn btn-warning btn-sm">
                                    <i class="bi bi-pencil-square"></i> Edit
                                </a>
                                <!-- Delete Button -->
                                <a asp-controller="Products" asp-action="DeleteProduct" asp-route-id="@product.Id" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this product?');">
                                    <i class="bi bi-trash"></i> Delete
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Include Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">

<!-- Custom CSS for Sticky Column and Wrapping -->
<style>
    .sticky-actions {
        position: sticky;
        right: 0;
        background-color: white;
        z-index: 2;
        box-shadow: -3px 0 5px rgba(0, 0, 0, 0.1);
    }

    /* Fix overlapping text and enforce wrapping */
    .text-wrap {
        white-space: normal; /* Ensures text wraps in the cell */
        word-break: break-word; /* Ensures long words break properly */
    }

    th.sticky-actions {
        background-color: #343a40;
    }

    th, td {
        overflow: hidden;
        text-overflow: ellipsis; /* Truncates text with ellipsis if too long */
    }

    /* Ensure a clean, modern appearance for table cells */
    .table td, .table th {
        vertical-align: middle;
    }
</style>
