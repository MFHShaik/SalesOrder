@using System.Globalization

@model IEnumerable<SalesOrders.Models.OrdersDto>

@{
    ViewData["Title"] = "Orders";
    var southAfricaCulture = new CultureInfo("en-ZA"); // South African Rand (ZAR) culture
}

<h1>Orders</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New Order</a>
</p>

<!-- Search Form -->
@using (Html.BeginForm("Index", "Orders", FormMethod.Get))
{
    <div class="input-group mb-3">
        <input type="text" name="searchTerm" value="@ViewData["CurrentFilter"]" class="form-control" placeholder="Search orders by ID, Customer Name, or Date" />
        <button class="btn btn-primary" type="submit">Search</button>
    </div>
}

<div class="table-responsive">
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Order ID</th>
                <th>Customer Name</th>
                <th>Order Date</th>
                <th>Status</th>
                <th>Total Amount</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Any())
            {
                foreach (var order in Model)
                {
                    <tr>
                        <td>@order.Id</td>
                        <td>@order.CustomerName</td>
                        <td>@order.OrderDate.ToShortDateString()</td>
                        <td>
                            <span class="badge @GetStatusBadgeClass(order.Status)">
                                @order.Status
                            </span>
                        </td>
                        <!-- Use South African Rands (ZAR) currency format -->
                        <td>@order.TotalAmount.ToString("C", southAfricaCulture)</td>
                        <td>
                            @if (order.TotalAmount == 0)
                            {
                                <!-- Add Products Button for orders with a total of 0 -->
                                <a href="@Url.Action("AddProductsToOrder", "OrdersProduct", new { orderId = order.Id })" class="btn btn-primary">Add Products</a>
                            }
                            else
                            {
                                <!-- View Details Button -->
                                <a asp-action="Details" asp-route-id="@order.Id" class="btn btn-primary">View Details</a>
                            }
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@order.Id" class="btn btn-warning">Edit</a>
                            <a href="javascript:void(0);" onclick="confirmDelete('@order.Id');" class="btn btn-danger">Delete</a>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="7" class="text-center">No orders available.</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    function confirmDelete(orderId) {
        if (confirm('Are you sure you want to delete this order?')) {
            window.location.href = '@Url.Action("Delete", "Orders")/' + orderId;
        }
    }
</script>

@functions {
    public string GetStatusBadgeClass(string status)
    {
        switch (status)
        {
            case "Pending":
                return "bg-warning";
            case "Completed":
                return "bg-success";
            case "Cancelled":
                return "bg-danger";
            default:
                return "bg-secondary";
        }
    }
}
