@model SalesOrders.Models.OrdersDto

@{
    ViewData["Title"] = "Edit Order";
}

<h1>Edit Order</h1>

<form asp-action="Edit" method="post">
    <input asp-for="Id" hidden />

    <div class="form-group">
        <label asp-for="CustomerName" class="control-label"></label>
        <input asp-for="CustomerName" class="form-control" />
        <span asp-validation-for="CustomerName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="OrderDate" class="control-label"></label>
        <input asp-for="OrderDate" class="form-control" type="date" />
        <span asp-validation-for="OrderDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Status" class="control-label">Order Status</label>
        <select asp-for="Status" asp-items="ViewBag.StatusOptions" class="form-control"></select>
        <span asp-validation-for="Status" class="text-danger"></span>
    </div>

    <h3>Order Products</h3>
    <table class="table">
        <thead>
            <tr>
                <th>Product</th>
                <th>Quantity</th>
                <th>Unit Price</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="product-list">
            @for (int i = 0; i < Model.OrderProducts.Count; i++)
            {
                <tr>
                    <td>
                        @Model.OrderProducts[i].ProductName
                        <input asp-for="@Model.OrderProducts[i].ProductId" hidden />
                    </td>
                    <td>
                        <input asp-for="@Model.OrderProducts[i].Quantity" class="form-control quantity-input" data-index="@i" />
                    </td>
                    <td>R @Model.OrderProducts[i].SalesPrice.ToString("0.00")</td>
                    <td>
                        <span class="total-price" data-index="@i">
                            R @(Model.OrderProducts[i].SalesPrice * Model.OrderProducts[i].Quantity).ToString("0.00")
                        </span>
                    </td>
                    <td>
                        <button type="button" class="btn btn-danger" onclick="removeProductRow(this, '@Model.OrderProducts[i].ProductId')">Remove</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <input type="hidden" id="deletedProducts" name="DeletedProductIds" />

    <h4>Total: R <span id="total-amount">@Model.TotalAmount.ToString("0.00")</span></h4>

    <!-- Redirect button to Add Products page -->
    <a href="@Url.Action("AddProductsToOrder", "OrdersProduct", new { orderId = Model.Id })" class="btn btn-secondary">Add Products</a>

    <div class="form-group mt-4">
        <input type="submit" value="Save" class="btn btn-primary" />
    </div>
</form>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const quantities = document.querySelectorAll('.quantity-input');
            quantities.forEach(input => {
                input.addEventListener('change', updateLineTotal);
            });
        });

        function updateLineTotal(event) {
            const input = event.target;
            const row = input.closest('tr');
            const price = parseFloat(row.querySelector('.unit-price').innerText.replace('R', ''));
            const quantity = parseInt(input.value);
            const total = price * quantity;
            row.querySelector('.total-price').innerText = `R ${total.toFixed(2)}`;

            updateTotalAmount();
        }

        function removeProductRow(button) {
            const row = button.closest('tr');
            row.remove();
            updateTotalAmount();
        }

        function updateTotalAmount() {
            let totalAmount = 0;
            document.querySelectorAll('.total-price').forEach(element => {
                const total = parseFloat(element.innerText.replace('R', ''));
                totalAmount += total;
            });
            document.getElementById('total-amount').innerText = `R ${totalAmount.toFixed(2)}`;
            document.getElementById('totalAmountInput').value = totalAmount;
        }

        function addProductRow() {
            // Implementation for adding a product row
            // Ensure you call updateTotalAmount after a row is added
        }
    </script>
}
