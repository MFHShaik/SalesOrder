@model SalesOrders.Models.OrdersDto

@{
    ViewData["Title"] = "Edit Order";
}

<div class="container mt-4">
    <div class="row mb-3">
        <div class="col-md-12">
            <h1><i class="bi bi-pencil-fill me-2"></i>Edit Order</h1>
        </div>
    </div>

    <form asp-action="Edit" method="post">
        <input asp-for="Id" hidden />

        <div class="card shadow-lg mb-4">
            <div class="card-body">
                <div class="form-group mb-3">
                    <label asp-for="CustomerName" class="form-label"><i class="bi bi-person-fill me-1"></i> Customer Name</label>
                    <input asp-for="CustomerName" class="form-control" />
                    <span asp-validation-for="CustomerName" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="OrderDate" class="form-label"><i class="bi bi-calendar-event-fill me-1"></i> Order Date</label>
                    <input asp-for="OrderDate" class="form-control" type="date" />
                    <span asp-validation-for="OrderDate" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="Status" class="form-label"><i class="bi bi-info-circle-fill me-1"></i> Order Status</label>
                    <select asp-for="Status" asp-items="ViewBag.StatusOptions" class="form-control"></select>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>

                <h3><i class="bi bi-box-seam me-2"></i>Order Products</h3>
                <table class="table table-hover table-bordered align-middle">
                    <thead class="table-dark">
                        <tr>
                            <th>Product</th>
                            <th>Quantity</th>
                            <th>Unit Price (R)</th>
                            <th>Total Price (R)</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="product-list">
                        @for (int i = 0; i < Model.OrderProducts.Count; i++)
                        {
                            <tr>
                                <td>
                                    @Model.OrderProducts[i].ProductName
                                    <input asp-for="@Model.OrderProducts[i].ProductId" hidden />
                                </td>
                                <td>
                                    <input asp-for="@Model.OrderProducts[i].Quantity" class="form-control quantity-input" data-index="@i" />
                                </td>
                                <td>R @Model.OrderProducts[i].SalesPrice.ToString("0.00")</td>
                                <td>
                                    <span class="total-price" data-index="@i">
                                        R @(Model.OrderProducts[i].SalesPrice * Model.OrderProducts[i].Quantity).ToString("0.00")
                                    </span>
                                </td>
                                <td>
                                    <button type="button" class="btn btn-sm btn-danger" onclick="removeProductRow(this, '@Model.OrderProducts[i].ProductId')">
                                        <i class="bi bi-trash-fill"></i> Remove
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                <input type="hidden" id="deletedProducts" name="DeletedProductIds" />

                <h4>Total: R <span id="total-amount">@Model.TotalAmount.ToString("0.00")</span></h4>

                <!-- Redirect button to Add Products page -->
                <a href="@Url.Action("AddProductsToOrder", "OrdersProduct", new { orderId = Model.Id })" class="btn btn-secondary">
                    <i class="bi bi-plus-circle-fill"></i> Add Products
                </a>
            </div>
        </div>

        <div class="form-group mt-4">
            <button type="submit" class="btn btn-primary">
                <i class="bi bi-save-fill me-1"></i> Save
            </button>
            <a asp-action="Index" class="btn btn-secondary">
                <i class="bi bi-x-circle-fill me-1"></i> Cancel
            </a>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const quantities = document.querySelectorAll('.quantity-input');
            quantities.forEach(input => {
                input.addEventListener('change', updateLineTotal);
            });
        });

        function updateLineTotal(event) {
            const input = event.target;
            const row = input.closest('tr');
            const price = parseFloat(row.querySelector('.total-price').innerText.replace('R', ''));
            const quantity = parseInt(input.value);
            const total = price * quantity;
            row.querySelector('.total-price').innerText = `R ${total.toFixed(2)}`;
            updateTotalAmount();
        }

        function removeProductRow(button, productId) {
            const row = button.closest('tr');
            row.remove();
            document.getElementById('deletedProducts').value += productId + ",";
            updateTotalAmount();
        }

        function updateTotalAmount() {
            let totalAmount = 0;
            document.querySelectorAll('.total-price').forEach(element => {
                const total = parseFloat(element.innerText.replace('R', ''));
                totalAmount += total;
            });
            document.getElementById('total-amount').innerText = `R ${totalAmount.toFixed(2)}`;
        }
    </script>
}
