@model IEnumerable<SalesOrders.Models.ProductDto>

<h2>Add Products to Order</h2>

<form asp-action="GenerateAndExecuteSql" method="post" id="addProductForm">
    <input type="hidden" name="orderId" value="@ViewBag.OrderId" />
    <input type="hidden" name="productIds" id="productIdsInput" />
    <input type="hidden" name="quantities" id="quantitiesInput" />

    <div class="form-group">
        <label for="ProductSelection">Select Product</label>
        <select id="ProductSelection" class="form-control">
            @foreach (var product in Model)
            {
                <option value="@product.Id" data-price="@product.SalesPrice">
                    @product.Name (@product.StockQuantity available) - R @product.SalesPrice.ToString("0.00")
                </option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="Quantity">Quantity</label>
        <input type="number" id="Quantity" class="form-control" min="1" value="1" required />
    </div>

    <button type="button" class="btn btn-primary" id="addProductButton">Add Product</button>

    <h3>Selected Products</h3>
    <table class="table table-bordered" id="selectedProductsTable">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price (R)</th>
                <th>Total (R)</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            <!-- Selected products will be added here -->
        </tbody>
    </table>

    <h3>Total Cost: <span id="totalCost">R0.00</span></h3>

    <button type="submit" class="btn btn-success" id="submitProductsButton">Submit Products</button>
</form>

<script>
    const addProductButton = document.getElementById('addProductButton');
    const selectedProductsTable = document.getElementById('selectedProductsTable').querySelector('tbody');
    const totalCostElement = document.getElementById('totalCost');
    const productIdsInput = document.getElementById('productIdsInput');
    const quantitiesInput = document.getElementById('quantitiesInput');
    let totalCost = 0;

    addProductButton.addEventListener('click', function () {
        const productSelect = document.getElementById('ProductSelection');
        const quantityInput = document.getElementById('Quantity');

        const selectedProductId = productSelect.value;
        const selectedProductText = productSelect.options[productSelect.selectedIndex].text;
        const quantity = parseInt(quantityInput.value);
        const price = parseFloat(productSelect.options[productSelect.selectedIndex].dataset.price);

        const totalProductCost = price * quantity;
        totalCost += totalProductCost;

        const newRow = selectedProductsTable.insertRow();
        newRow.innerHTML = `
                <td>${selectedProductText} <input type="hidden" class="product-id" value="${selectedProductId}"/></td>
                <td>${quantity}</td>
                <td>R${price.toFixed(2)}</td>
                <td>R${totalProductCost.toFixed(2)}</td>
                <td><button type="button" class="btn btn-danger remove-product">Remove</button></td>
            `;

        const removeButton = newRow.querySelector('.remove-product');
        removeButton.addEventListener('click', function () {
            selectedProductsTable.deleteRow(newRow.rowIndex - 1);
            totalCost -= totalProductCost;
            totalCostElement.textContent = `R${totalCost.toFixed(2)}`;
        });

        totalCostElement.textContent = `R${totalCost.toFixed(2)}`;
        productSelect.selectedIndex = 0;
        quantityInput.value = 1;
    });

    document.getElementById('addProductForm').addEventListener('submit', function (event) {
        const productIds = [];
        const quantities = [];

        const rows = selectedProductsTable.getElementsByTagName('tr');
        for (let row of rows) {
            const quantity = row.cells[1].textContent;
            const productId = row.cells[0].querySelector('.product-id').value;
            productIds.push(productId);
            quantities.push(quantity);
        }

        productIdsInput.value = productIds.join(',');
        quantitiesInput.value = quantities.join(',');
    });
</script>
